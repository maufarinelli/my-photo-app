import Head from "next/head";
import styles from "@/styles/Pages.module.css";
import {
  Authenticator,
  useAuthenticator,
  Card,
  Grid,
  useTheme,
  Flex,
} from "@aws-amplify/ui-react";
import { list, ListOutputItemWithPath } from "aws-amplify/storage";
import { useEffect, useState } from "react";
import Link from "next/link";
import { AiOutlineFolderOpen } from "react-icons/ai";

const Home: React.FC = () => {
  const { tokens } = useTheme();
  const { user, signOut, toSignIn } = useAuthenticator((context) => [
    context.user,
  ]);
  const [folders, setFolders] = useState<ListOutputItemWithPath[]>([]);

  useEffect(() => {
    const listFolders = async () => {
      try {
        const result = await list({
          path: "public/",
        });
        console.log("result ", result);
        const folders = result.items.filter(
          (item) =>
            item.path.endsWith("/") &&
            item.path !== "public/" &&
            !item.path.endsWith("thumbnails/") &&
            !item.path.endsWith("slider/")
        );
        const sanitizedFolderNames = folders.map((folder) => ({
          ...folder,
          name: folder.path.replace("public/", "").replace("/", ""),
        }));
        setFolders(sanitizedFolderNames);
      } catch (error) {
        console.log(error);
      }
    };

    listFolders();
  }, []);

  return (
    <>
      <Head>
        <title>My Photos App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Authenticator signUpAttributes={["email", "preferred_username"]}>
        <div className={`${styles.page}`}>
          <main className={styles.main}>
            {user ? (
              <>
                <header style={{ margin: "20px" }}>
                  <Flex justifyContent="space-between">
                    <h1 style={{ flex: 1, textAlign: "center" }}>
                      My Photos App
                    </h1>
                    <button onClick={signOut}>Sign out</button>
                  </Flex>
                </header>
                <Grid
                  className={styles.gridTemplateColumns}
                  gap={tokens.space.small}
                >
                  {folders.map((folder) => (
                    <Card
                      variation="outlined"
                      key={`${folder.eTag}-${folder.path}`}
                      style={{ borderRadius: "10px" }}
                    >
                      <Link href={folder.name}>
                        <Flex
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          {folder.name}
                          <AiOutlineFolderOpen />
                        </Flex>
                      </Link>
                    </Card>
                  ))}
                </Grid>
              </>
            ) : (
              <>
                <h1>My Photos App</h1>
                <button onClick={toSignIn}>Login</button>
              </>
            )}
          </main>
          <footer className={styles.footer}></footer>
        </div>
      </Authenticator>
    </>
  );
};

export default Home;
